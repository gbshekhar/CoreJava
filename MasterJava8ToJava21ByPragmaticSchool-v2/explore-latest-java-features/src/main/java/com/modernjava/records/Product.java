package com.modernjava.records;

import java.math.BigDecimal;
import java.util.Objects;

public record Product(String name, BigDecimal cost, String type) {

    //By default, the constructors that are generated by the compiler
    //are called canonical constructors

    //Block which is used for validations
    public  Product {
        if(name == null || name.isBlank()){
            throw new IllegalArgumentException("Name is not valid");
        }
        if(cost.compareTo(BigDecimal.ZERO) <= 0){
           throw new IllegalArgumentException("Cost is not valid");
        }
    }

    //Custom Constructor which is inside calling Canonical Constructor
    public Product(String name, BigDecimal cost){
        this(name, cost, "GENERAL");
    }

    @Override
    public boolean equals(Object o) {
        if (!(o instanceof Product product)) return false;
        return Objects.equals(name, product.name)
                //&& Objects.equals(type, product.type)
                && Objects.equals(cost, product.cost);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, cost, type);
    }
}
